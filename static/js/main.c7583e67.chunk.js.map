{"version":3,"sources":["components/Header/Header.js","images/close.svg","images/delete.svg","components/Button/Button.js","components/TodoItem/TodoItem.js","components/Loader/Loader.js","components/TodoList/TodoList.js","images/dott.svg","components/Select/Select.js","utils/api.js","components/Main/Main.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Button","text","variant","event","visible","onClick","type","src","closeImg","alt","deleteImg","TodoItem","unit","onDeleteClick","handleItemClick","title","id","Loader","TodoList","units","loading","map","i","Select","options","selected","selectedOption","useState","isOpen","setIsOpen","onMouseLeave","onMouseOver","menuImg","option","api","this","_baseUrl","baseUrl","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","Main","visibleArea","setVisibleArea","areaValue","setAreaValue","setUnits","setLoading","updateItem","setUpdateItem","isCloseVisible","setCloseVisible","currentCard","setCurrentCard","addButtonName","setAddButtonName","setSelectedOption","useEffect","getUnits","data","setTimeout","catch","error","console","log","filter","placeholder","name","value","onChange","evt","target","minLength","newTitle","length","el","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7583e67.chunk.js","sourcesContent":["import './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">ToDo List</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","export default __webpack_public_path__ + \"static/media/delete.79c85d6d.svg\";","import './Button.css';\r\nimport closeImg from '../../images/close.svg';\r\nimport deleteImg from '../../images/delete.svg';\r\n\r\nfunction Button({ text, variant, event, visible }) {\r\n  return (\r\n    <button onClick={event}\r\n      className={`button\r\n        ${variant === 'text' && 'button_variant_text button_visible'}\r\n        ${variant === 'close' && `button_variant_close ${visible && 'button_visible'}`}\r\n        ${variant === 'delete' && 'button_variant_delete button_visible'}\r\n      `}\r\n      type=\"button\"\r\n    >\r\n      {text}\r\n      {variant === 'close' ? (\r\n        <img className=\"button_variant_close\" src={closeImg} alt=\"Закрыть\" />\r\n      ) : null}\r\n      {variant === 'delete' ? (\r\n        <img className=\"button_variant_delete\" src={deleteImg} alt=\"Удалить\" />\r\n      ) : null}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import './TodoItem.css';\r\nimport Button from '../Button/Button';\r\n\r\nfunction TodoItem({ unit, onDeleteClick, handleItemClick }) {\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <li onClick={() => handleItemClick(unit)} className=\"todo-item\">\r\n        <p className=\"todo-item__unit\">{unit.title}</p>\r\n      </li>\r\n      <Button event={() => onDeleteClick(unit.id)} variant=\"delete\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","import './Loader.css';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader-ring\">\r\n  <div className=\"loader-ring__main\">\r\n    <div className=\"loader-ring__child\" />\r\n    <div className=\"loader-ring__child\" />\r\n    <div className=\"loader-ring__child\" />\r\n    <div className=\"loader-ring__child\" />\r\n  </div>\r\n</div>\r\n);\r\n\r\nexport default Loader;\r\n","import './TodoList.css';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport Loader from '../Loader/Loader';\r\n\r\nfunction TodoList({ units, loading, onDeleteClick, handleItemClick }) {\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {loading && <Loader />}\r\n      {units.map((unit, i) => (\r\n        <TodoItem unit={unit} onDeleteClick={onDeleteClick} handleItemClick={handleItemClick} key={i} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","export default __webpack_public_path__ + \"static/media/dott.e1e2c114.svg\";","import React, { useState } from \"react\";\r\nimport './Select.css';\r\nimport menuImg from '../../images/dott.svg';\r\n\r\nfunction Select({ options, selected, selectedOption }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => setIsOpen(true);\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <section onMouseLeave={close} className=\"select\">\r\n      <div className=\"select__wrapper\">\r\n        <div className=\"select__header\" onMouseOver={open} >\r\n          <img className=\"select__menu\" src={menuImg} alt=\"Меню\" />\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"select__container\">\r\n            <div className=\"select__list\">\r\n              {options.map((option, i) => (\r\n                <li\r\n                  className={`select__list-item ${selectedOption === option && 'select__list-item__active'}`}\r\n                  onClick={() => {\r\n                    selected(option);\r\n                    setIsOpen(false);\r\n                  }} key={i}>\r\n                  {option}\r\n                </li>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Select;","class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  getUnits() {\r\n    return fetch(`${this._baseUrl}/todos?_limit=5`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://jsonplaceholder.typicode.com',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import './Main.css';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport Button from '../Button/Button';\r\nimport Select from '../Select/Select';\r\nimport api from '../../utils/api';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Main() {\r\n  const [visibleArea, setVisibleArea] = useState(false);\r\n  const [areaValue, setAreaValue] = useState('');\r\n  const [units, setUnits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateItem, setUpdateItem] = useState(false);\r\n  const [isCloseVisible, setCloseVisible] = useState(false);\r\n  const [currentCard, setCurrentCard] = useState({});\r\n  const [addButtonName, setAddButtonName] = useState('Добавить');\r\n  const [selectedOption, setSelectedOption] = useState('В конец');\r\n\r\n  const optionsForCreate = [\"В начало\", \"В конец\"];\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUnits()\r\n      .then((data) => {\r\n        setTimeout(() => {\r\n          setUnits(data);\r\n          setLoading(false);\r\n        }, 1000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (evt) => {\r\n    setAreaValue(evt.target.value);\r\n  };\r\n\r\n  const onDeleteClick = (id) => {\r\n    setVisibleArea(false);\r\n    setAreaValue('');\r\n    setUnits(units.filter(unit => unit.id !== id));\r\n  };\r\n\r\n  function updateState(newTitle) {\r\n    return units.map((el) => {\r\n      if (el.id === currentCard.id) {\r\n        return {\r\n          ...el,\r\n          title: newTitle,\r\n        };\r\n      }\r\n      return el;\r\n    });\r\n  }\r\n\r\n  const onClickButtonAdd = () => {\r\n    setCloseVisible(!isCloseVisible);\r\n    setAreaValue('');\r\n    setVisibleArea(!visibleArea);\r\n    if (visibleArea && !updateItem) {\r\n      areaValue.length > 0\r\n        ? setUnits(\r\n          selectedOption === 'В конец' ?\r\n            [\r\n              ...units,\r\n              { title: areaValue, id: units.length + 1 },\r\n            ]\r\n            :\r\n            [\r\n              { title: areaValue, id: units.length + 1 },\r\n              ...units,\r\n            ]\r\n        )\r\n        : setVisibleArea(false);\r\n    } else if (visibleArea && updateItem) {\r\n      setUnits(updateState(areaValue));\r\n      setAddButtonName('Добавить');\r\n    }\r\n    setUpdateItem(false);\r\n  }\r\n\r\n  const handleItemClick = (unit) => {\r\n    setCloseVisible(true);\r\n    setAddButtonName('Обновить');\r\n    setVisibleArea(true);\r\n    setAreaValue(unit.title);\r\n    setCurrentCard(unit);\r\n    setUpdateItem(true);\r\n  }\r\n\r\n  function onClickClose() {\r\n    setAddButtonName('Добавить');\r\n    setVisibleArea(false);\r\n    setAreaValue('');\r\n    setUpdateItem(false);\r\n    setCloseVisible(false);\r\n  }\r\n\r\n  const handleItemOnSelectClick = (selected) => {\r\n    setSelectedOption(selected);\r\n  }\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <div className=\"main__container\">\r\n        <h2 className=\"main__titile\">Задачи</h2>\r\n      </div>\r\n      <TodoList units={units} loading={loading} onDeleteClick={onDeleteClick} handleItemClick={handleItemClick} />\r\n      <textarea\r\n        placeholder=\"Добавить задачу...\"\r\n        name=\"text-area\"\r\n        className={`main__text-area ${visibleArea && 'main__text-area_visible'}`}\r\n        value={areaValue}\r\n        onChange={handleChange}\r\n        minLength=\"3\"\r\n      />\r\n      <div className=\"main__container\">\r\n        <Button event={onClickButtonAdd} variant=\"text\" text={addButtonName} />\r\n        <Button visible={isCloseVisible} event={onClickClose} variant=\"close\" />\r\n        <Select options={optionsForCreate} selectedOption={selectedOption} selected={handleItemOnSelectClick} />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import './App.css';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}